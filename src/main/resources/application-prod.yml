
# 数据源配置
spring:
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driverClassName: com.mysql.jdbc.Driver
    druid:
      # 主库数据源
      master:
        url: jdbc:mysql://localhost:3366/scs_top?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&allowMultiQueries=true
        username: root
        password: root
      # 从库数据源
      slave:
        # 从数据源开关/默认关闭
        #  enabled: false
        url: jdbc:mysql://localhost:3366/worm-reading?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&allowMultiQueries=true
        username: root
        password: root
      # 初始连接数
      initial-size: 10
      # 最大连接池数量
      max-active: 20
      # 最小连接池数量
      min-idle: 8
      # 配置获取连接等待超时的时间
      max-wait: 60000
      # 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。
      pool-prepared-statements: false
      # 要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100
      max-pool-prepared-statement-per-connection-size: 20
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      timeBetweenEvictionRunsMillis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      min-evictable-idle-time-millis: 300000
      # 用来检测连接是否有效的sql，要求是一个查询语句，常用select 'x'。如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会其作用。
      validation-query: SELECT 1 FROM DUAL
      # 建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
      test-while-idle: true
      # 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
      test-on-borrow: false
      # 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
      test-on-return: false
      # 属性类型是字符串，通过别名的方式配置扩展插件，常用的插件有：
      #监控统计用的filter:stat
      #日志用的filter:log4j2
      #防御sql注入的filter:wall
      filters: stat,wall,log4j2
      filter:
        stat:
          log-slow-sql: true
          slow-sql-millis: 1000
          merge-sql: false
        wall:
          config:
            multi-statement-allow: true
  redis:
    # Redis数据库索引（默认为0）测试环境和线上环境分开
    database: 0
    # Redis服务器地址
    host: localhost
    # Redis服务器连接端口
    port: 6379
    # Redis服务器连接密码（默认为空）
    password: pmit123
    timeout: 800  # 连接超时时间（毫秒）
    jedis:
      pool:
        max-active: 200 # 连接池最大连接数（使用负值表示没有限制）
        max-wait: -1  # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-idle: 8  # 连接池中的最大空闲连接
        min-idle: 3  # 连接池中的最小空闲连接
#  rabbitmq:
#    host: rabbitmq
#    port: 5672
#    username: admin
#    password: admin
#    # 虚拟主机配置 要与该账户在rabbitMQ的配置相同
#    virtual-host: /
#    template:
#      retry:
#        enabled: true
#      # 触发returnedMessage回调必须设置mandatory=true, 否则Exchange没有找到Queue就会丢弃掉消息, 而不会触发回调
#      mandatory: true
#    listener:
#      direct:
#        retry:
#          enabled: true  # 开始失败重试
#          max-attempts: 5
#          initial-interval: 5000 # 重试间隔时间
#      simple:
#        # 设置应答模式  NONE:自动回调,AUTO:自动检测异常或者超时事件，如果发生则返回noack，消息自动回到队尾，MANUAL:手动回调
#        acknowledge-mode: manual # 手动应答
#        auto-startup: true
#        default-requeue-rejected: false # 不重回队列
#        concurrency: 5
#        max-concurrency: 20
#        prefetch: 1 # 每次只处理一个信息
#        retry:
#          enabled: true
#          max-attempts: 3
#          initial-interval: 5000
#    # 开启confirms回调 P -> Exchange
#    publisher-confirms: true
#    # 开启returnedMessage回调 Exchange -> Queue
#    publisher-returns: true


logging:
  pattern:
    level: INFO